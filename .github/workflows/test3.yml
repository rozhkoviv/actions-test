name: Test3
run-name:  ${{ inputs.test_name || github.event.client_payload.env }}

on:
  workflow_dispatch:
    inputs:
      test_name:
        type: string
        description: 'OKEOKE'
        required: false
        default: 'TESTNAME_1'
  repository_dispatch:
    types:
      - run_tests

env:
  TEST_TEST: ${{ github.event.inputs.test_name || github.event.client_payload.env }}

jobs:
  e2e_tests:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    # - name: Get branch pull requests
    #   run: |
    #     curl -X POST https://api.github.com/graphql \
    #     -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
    #     -H "Content-Type: application/json" \
    #     -d '{"query":"{repository(owner:\"${{ github.repository_owner }}\",name:\"${{ github.event.repository.name }}\"){pullRequests(first: 1,headRefName:\"${{ github.ref_name}}\",states:[OPEN],orderBy:{field:CREATED_AT, direction:DESC}){nodes{number}}}}"}' > \
    #     pulls.json
    # - name: Parse pull requests
    #   id: pr-number-parse
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const pulls = require('./pulls.json')
    #       const lastPull = pulls.data.repository.pullRequests.nodes.shift()
    #       if (lastPull) {
    #         core.setOutput('pr_number', String(lastPull.number))
    #       }
    - name: Checkout to target
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.client_payload.sha }}
    - name: Update check status
      run: |
        curl --request POST \
        --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.client_payload.sha }} \
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
        --header 'content-type: application/json' \
        --data '{
          "context": "e2e_tests",
          "state": "pending",
          "description": "e2e tests pending...",
          "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }'
    - name: Test 3
      run: |
        echo "${{ inputs.test_name }}"
    - name: PRINT DEBUG
      env:
        DEBUG_QWE: ${{ github.sha }}
      run: |
        exit 1
  
  update_commit_status_finish:
    needs: [e2e_tests]
    permissions: write-all
    if: ${{ always() && github.event.client_payload.sha }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to target
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.client_payload.sha }}
      - name: Success
        if: ${{ success() }}
        id: success-commit-status
        run:
          echo "status=success" >> $GITHUB_OUTPUT
      - name: Success
        if: ${{ failure() }}
        id: failure-commit-status
        run:
          echo "status=failure" >> $GITHUB_OUTPUT
      - name: Update status
        env:
          COMMIT_STATUS: ${{ steps.success-commit-status.outputs.status || steps.failure-commit-status.outputs.status }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.event.client_payload.sha }} \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'Content-Type: application/json' \
          --data '{
            "context": "e2e_tests",
            "state": "${{ steps.success-commit-status.outputs.status || steps.failure-commit-status.outputs.status }}",
            "description": "${{ steps.success-commit-status.outputs.status || steps.failure-commit-status.outputs.status }}",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
      
    # - name: debug
    #   env:
    #     PR_NUMBER_TEST: ${{ steps.pr-number-parse.outputs.pr_number }}
    #   run: |
    #     echo $PR_NUMBER_TEST
    # - name: Update comment on success
    #   if: ${{ steps.pr-number-parse.outputs.pr_number && success() }}
    #   uses: thollander/actions-comment-pull-request@v2
    #   with:
    #     comment_tag: e2e_tests_comment
    #     pr_number: ${{ steps.pr-number-parse.outputs.pr_number }}
    #     message: |
    #       Tests passed!
    # - name: Update comment on failure
    #   if: ${{ steps.pr-number-parse.outputs.pr_number && failure() }}
    #   uses: thollander/actions-comment-pull-request@v2
    #   with:
    #     comment_tag: e2e_tests_comment
    #     pr_number: ${{ steps.pr-number-parse.outputs.pr_number }}
    #     message: |
    #       Tests failed!
        